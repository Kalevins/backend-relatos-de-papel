version: '3.9'

services:

  eureka-gateway:
    build:
      context: ./ms-gateway
    container_name: ms-gateway
    ports:
      - "8762:8762"
    depends_on:
      eureka-server:
        condition: service_started
    environment:
      - EUREKA_URL=http://172.28.0.3:8761/eureka
      - HOSTNAME=172.28.0.10
    networks:
        backend:
          ipv4_address: 172.28.0.10
      
   
  mysql-db:
      image: mysql:8.4
      container_name: mysql-db
      environment:
        MYSQL_ROOT_PASSWORD: rootpass
        MYSQL_DATABASE: booksdb
        MYSQL_USER: booksuser
        MYSQL_PASSWORD: bookspass
      ports:
        - "3306:3306"
      volumes:
        - ./mysql-db/init.sql:/docker-entrypoint-initdb.d/init.sql
      networks:
        backend:
          ipv4_address: 172.28.0.2
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}"]
        interval: 5s
        timeout: 5s
        retries: 10   
        
  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      backend:
        ipv4_address: 172.28.0.3

  books-catalogue:
    build:
      context: ./ms-books-catalogue
    container_name: ms-books-catalogue
    ports:
      - "8081:8081"
    depends_on:
      mysql-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

    environment:
      - DB_URL=jdbc:mysql://172.28.0.2:3306/booksdb
      - EUREKA_URL=http://172.28.0.3:8761/eureka
    networks:
      backend:
        ipv4_address: 172.28.0.4

    
  # books-catalogue-two:
  #   build:
  #     context: ./ms-books-catalogue
  #   container_name: ms-books-catalogue-2
  #   ports:
  #     - "8082:8081"
  #   depends_on:
  #     mysql-db:
  #       condition: service_started
  #     eureka-server:
  #       condition: service_started

  #   environment:
  #     - DB_URL=jdbc:mysql://172.28.0.2:3306/booksdb
  #     - EUREKA_URL=http://172.28.0.3:8761/eureka
  #   networks:
  #     backend:
  #       ipv4_address: 172.28.0.5

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1