/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.13.0
 */


import { check, group, sleep } from "k6";
import http from "k6/http";

const BASE_URL = "http://localhost:8081";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function() {
    group("/books", () => {
        // let visible = null  // specify value as there is no example value for this parameter in OpenAPI spec
        // let author = null  // specify value as there is no example value for this parameter in OpenAPI spec
        // let price = null   // specify value as there is no example value for this parameter in OpenAPI spec
        // let isbn = null // specify value as there is no example value for this parameter in OpenAPI spec
        // let rating = null  // specify value as there is no example value for this parameter in OpenAPI spec
        // let description = null  // specify value as there is no example value for this parameter in OpenAPI spec
        // let title =  null // specify value as there is no example value for this parameter in OpenAPI spec
        // let category = null  // specify value as there is no example value for this parameter in OpenAPI spec
        // let publicationDate = null  // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: getBooks
        {
            let url = BASE_URL + `/books`; // <-- Agrega 'let' aquÃ­
            // let url = BASE_URL + `/books?title=${title}&author=${author}&category=${category}&isbn=${isbn}&publicationDate=${publicationDate}&rating=${rating}&price=${price}&description=${description}&visible=${visible}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: createBook
        // {
        //     let url = BASE_URL + `/books`;
        //     // TODO: edit the parameters of the request body.
        //     let body = {"title": "string", "author": "string", "category": "string", "isbn": "string", "publicationDate": "date", "rating": "integer", "price": "bigdecimal", "description": "string", "visible": "boolean"};
        //     let params = {
        //         headers: {
        //             "Content-Type": "application/json", "Accept": "*/*"
        //         }
        //     };
        //     let request = http.post(url, JSON.stringify(body), params);

        //     check(request, {
        //         "OK": (r) => r.status === 200
        //     });
        // }
    });

    group("/books/{id}", () => {
        let id = 1; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: getBook
        {
            let url = BASE_URL + `/books/${id}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // // Request No. 2: updateBook
        // {
        //     let url = BASE_URL + `/books/${id}`;
        //     // TODO: edit the parameters of the request body.
        //     let body = {"title": "string", "author": "string", "category": "string", "isbn": "string", "publicationDate": "date", "rating": "integer", "price": "bigdecimal", "description": "string", "visible": "boolean"};
        //     let params = {
        //         headers: {
        //             "Content-Type": "application/json", "Accept": "*/*"
        //         }
        //     };
        //     let request = http.put(url, JSON.stringify(body), params);

        //     check(request, {
        //         "OK": (r) => r.status === 200
        //     });

        //     sleep(SLEEP_DURATION);
        // }

        // // Request No. 3: deleteBook
        // {
        //     let url = BASE_URL + `/books/${id}`;
        //     let request = http.del(url);

        //     check(request, {
        //         "OK": (r) => r.status === 200
        //     });

        //     sleep(SLEEP_DURATION);
        // }

        // // Request No. 4: patchBook
        // {
        //     let url = BASE_URL + `/books/${id}`;
        //     let params = {
        //         headers: {
        //             "Content-Type": "application/json", "Accept": "*/*"
        //         }
        //     };
        //     let request = http.patch(url, params);

        //     check(request, {
        //         "OK": (r) => r.status === 200
        //     });
        // }
    });

}
